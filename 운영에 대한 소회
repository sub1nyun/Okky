운영에 대한 소회..
운영하시는 분들 많을 거라고 생각이 듭니다.

어떤 분들은 git 익히고, 소스 서버에 띄우고, 소스 분석하고, 이렇게 차례대로 따라나가는 방법을 선택하리라 생각합니다

물론 처음에야 도메인 지식도 모르고, 업무를 배워나가면 된다 라고, 생각하실 수는 있으나,

사실 운영은 시간이 지남에 따라 , 고객의 흐름을 리드 하거나 혹은 조율할 수 있는 능력을 키우는 것이 맞습니다.

다만 처음 들어왔기 때문에 모르고, 익혀야 하는 시간이 필요로 하지만, 언제까지나 코드만 보고 따라갈 수 없습니다



가령 구매나, 영업 등 타 시스템이나 책을 통해 알수 있는 부분들은, 기본지식은 책을 통해서 공부하셔야 합니다.

무작정 들어가서 알려주고 가르쳐 주겠지?.. 아무도 안 가르쳐주고, 아무도 안 알려주는걸 전제로 생각해야 합니다.

그럼 내가 왜해? 어떻게 해? 라는건.. 학생때이고, 돈벌러 나온 이상, 머리를 갈아 끼우셔야 합니다.



저는 가장 좋아하는 것은 프로세스 이지만, 사실 프로세스가 제대로 정리된 곳이 많지 않습니다

소스를 마냥 뜯어볼게 아니라면, 기본 도메인 지식을 다른 서적, 다른 프로그램 혹은 인수인계 이후, 소스를 들여다보며

시간을 내서 정립해 나가는 것이 가장 베스트 입니다.



저는 운영을 가면, 우선 정리하는 것이, 업무의 패턴 입니다.

자주 일어나는 일, 빈번하게 일어나는 일, 매일, 매주 언제 운영 반영을 하는지, 반영 프로세스는 어떤지 등의

실제로 발생하는 것들을 정리하고, 인수자나 담당자들에게 메일을 보내서, 내가 정리한게 맞느냐 혹은

좀 더 보탬이 될만한 것들 좀 던져줘... 라고 부탁을 합니다. 여기서 가장 중요한 것이 적극성 인거죠..



타인과 구분될 수 있고, 업무를 알려고 노력한다. 그리고 팔로우 가능한 각 담당자 들과 언제든 얘기해서

내 업무와 연계하여 얘기할 수 있는 자세, 능력을 표출하는 것이 가장 좋은 자세입니다.



코드, 프로그래밍 소스, 개발 적인 부분은 시간 나면 언제든 해당 부분만 뒤져서 어떻게 든 시간을 내서

할수 있습니다만. 운영은 코드를 보는 게 아니라 이력(히스토리), 왜? 이런 코드를 짠 이유가 누가 결정을 내렸는지,

내가 해야하는 일이 프로그램을 수정해서 할 일이냐, DB의 데이터만 고칠 일인지,

업무에 대한 리드를 누가 가져가느냐 등의 좀 더 업무 적으로 풀어내야 할 능력도 필요합니다.



고객은 늘 바뀌고, 자리가 옮겨지고, 하지만 그 자리를 대체하는 운영 담당자는 늘 그 자리에 있을 수 있습니다

호흡을 길게 가져가야 합니다.



운영 개발을 가져가는 개발자의 자세라 생각하는 짧은 생각이었습니다...
