전역 변수를 사용하지 않고 객체를 하나만 생성하도록 하며, 생성된 객체를 어디에서든지 참조할 수 있도록 하는 패턴입니다.

하나의 인스턴스만을 생성하며 getInstance메서드로 모든 클라이언트에게 동일한 인스턴스를 반환합니다.

private 생성자를 가지는 특징을 가지며, 생성된 싱글톤 오브젝트는 저장할 수 있는 자신과 같은 타입의 스태틱 필드를 정의합니다.

싱글톤 패턴의 문제점은 다음과 같습니다.

의존 관계상 클라이언트가 구체 클래스에 의존합니다.
private 생성자 때문에 테스트가 어렵습니다.
객체 인스턴스를 하나만 생성해서 공유하는 방식 때문에 싱글톤 객체를 stateful하게 설계 했을 경우 큰 장애 발생요인이 됩니다.
싱글톤의 단점을 해결하기 위해 무상태(stateless)로 설계해야 합니다.

특정 클라이언트에 의존적인 필드가 있으면 안됩니다.
특정 클라이언트가 값을 변경할 수 있는 필드가 있으면 안됩니다.
가급적 읽기 전용으로 만들고, 필드 대신에 자바에서 공유되지 않는 지역변수, 파라미터, ThreadLocal 등을 사용합니다.
